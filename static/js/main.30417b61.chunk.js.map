{"version":3,"sources":["media/eraser.svg","media/grid.svg","media/trashcan.svg","store/reducers/index.js","store/reducers/modals.js","store/actions/types.js","store/reducers/inputs.js","store/reducers/observers.js","store/reducers/tiles.js","store/index.js","store/actions/index.js","components/draggable/boundingRect.jsx","components/tiles/container.jsx","components/tiles/tile.jsx","components/tabs/tabs.jsx","components/tiles/tileBar.jsx","components/draggable/dragLayer.jsx","components/draggable/itemTypes.js","components/draggable/snapToGrid.js","components/popovers/alert.jsx","components/popovers/alertButton.jsx","components/popovers/floatingMenu.jsx","components/popovers/modal.jsx","components/popovers/portal.jsx","components/app.jsx","index.js"],"names":["module","exports","rootReducer","combineReducers","modals","state","action","type","id","payload","filter","modal","isOpen","inputs","value","map","input","observers","isInView","viewState","observer","tiles","content","classes","left","top","tile","store","createStore","modalClosed","tileUpdated","BoundingRect","children","node","useRef","useState","boundingNode","setBounds","useEffect","current","ref","className","Children","child","key","isValidElement","cloneElement","Container","hasSnapToGrid","isEraseMode","dispatch","useDispatch","useSelector","shallowEqual","useDrop","accept","itemTypes","TILE","drop","item","monitor","find","delta","getDifferenceFromInitialOffset","offset","getSourceClientOffset","bounds","getBoundingClientRect","x","y","snapToGrid","actions","canDrop","isOver","getClasses","handleClick","Tile","isSource","Object","useDrag","end","dropResult","getDropResult","itemProps","Math","trunc","random","collect","isDragging","drag","preview","src","alt","captureDraggingState","onClick","style","transform","Tab","index","label","switchTab","activeTab","Tabs","isColumnar","setActiveTab","activeChild","props","CHAR_SETS","Map","right","TileBar","getTiles","charSet","side","typeCase","c","toUpperCase","e","Array","from","values","idx","DragLayer","useDragLayer","getItem","itemType","getItemType","itemOffset","initItemOffset","getInitialSourceClientOffset","deltaOffset","display","getStyle","axis","round","Alert","modalClasses","iconClasses","icon","heading","subheading","closeAlert","text","handleClose","AlertButton","FloatingMenu","isActive","title","Modal","hasHeader","closeModal","event","stopPropagation","onMouseDown","onMouseUp","portalRoot","document","getElementById","Portal","ReactDOM","createPortal","App","isConfirmationOpen","setIsEraseMode","isSnapToGrid","setIsSnapToGrid","DndProvider","backend","TouchBackend","options","enableMouseEvents","Media","render","StrictMode"],"mappings":"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","file":"static/js/main.30417b61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eraser.70bf025a.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid.91926935.svg\";","module.exports = __webpack_public_path__ + \"static/media/trashcan.11a7a757.svg\";","import { combineReducers } from \"redux\";\r\nimport modals from \"./modals\";\r\nimport inputs from \"./inputs\";\r\nimport observers from \"./observers\";\r\nimport tiles from \"./tiles\";\r\n\r\nconst rootReducer = combineReducers({ modals, inputs, observers, tiles });\r\n\r\nexport default rootReducer;","import * as types from \"../actions/types\";\r\n\r\nexport default function modal(state = [], action) {\r\n    switch (action.type) {\r\n        case types.MODAL_CLOSED: {\r\n            const { id } = action.payload;\r\n            return state.filter(modal => modal.id !== id);\r\n        } case types.MODAL_OPENED: {\r\n            const { id } = action.payload;\r\n            return [...state, { id, isOpen: true }];\r\n        } default: {\r\n            return state;\r\n        }\r\n    }\r\n}","// MODALS\r\nexport const MODAL_CLOSED = \"MODAL_CLOSED\";\r\nexport const MODAL_OPENED = \"MODAL_OPENED\";\r\n\r\n// INPUTS\r\nexport const INPUT_CREATED = \"INPUT_CREATED\";\r\nexport const INPUT_DELETED = \"INPUT_DELETED\";\r\nexport const INPUT_UPDATED = \"INPUT_UPDATED\";\r\n\r\n// OBSERVERS\r\nexport const OBSERVER_CREATED = \"OBSERVER_CREATED\";\r\nexport const OBSERVER_DELETED = \"OBSERVER_DELETED\";\r\nexport const OBSERVER_UPDATED = \"OBSERVER_UPDATED\";\r\n\r\n// TILES\r\nexport const TILE_CREATED = \"TILE_CREATED\";\r\nexport const TILE_DELETED = \"TILE_DELETED\";\r\nexport const TILES_DELETED = \"TILES_DELETED\";\r\nexport const TILE_UPDATED = \"TILE_UPDATED\";","import * as types from \"../actions/types\";\r\n\r\nexport default function inputs(state = [], action) {\r\n    switch (action.type) {\r\n        case types.INPUT_CREATED: {\r\n            const { id, value } = action.payload;\r\n            return [...state, { id, value }];\r\n        } case types.INPUT_UPDATED: {\r\n            const { id, value } = action.payload;\r\n            return state.map(input => input.id === id ? { ...input, value } : input);\r\n        } case types.INPUT_DELETED: {\r\n            return state.filter(input => input.id !== action.payload.id);\r\n        } default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import * as types from \"../actions/types\";\r\n\r\nexport default function observer(state = [], action) {\r\n    switch (action.type) {\r\n        case types.OBSERVER_CREATED: {\r\n            const { id } = action.payload;\r\n            return [...state, { id, isInView: false }];\r\n        } case types.OBSERVER_UPDATED: {\r\n            const { id, viewState } = action.payload;\r\n            return state.map(observer => observer.id === id ? { ...observer, isInView: viewState } : observer);\r\n        } case types.OBSERVER_DELETED: {\r\n            const { id } = action.payload;\r\n            return state.filter(input => input.id !== id);\r\n        } default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import * as types from \"../actions/types\";\r\n\r\nexport default function tiles(state = [], action) {\r\n    switch (action.type) {\r\n        case types.TILE_CREATED: {\r\n            const { id, content, classes, left, top } = action.payload;\r\n            return [...state, { id, content, classes, left, top }];\r\n        } case types.TILE_DELETED: {\r\n            return state.filter(tile => tile.id !== action.payload.id);\r\n        } case types.TILES_DELETED: {\r\n            return [];\r\n        } case types.TILE_UPDATED: {\r\n            const { id, content, classes, left, top } = action.payload;\r\n            return state.map(tile => tile.id === id ? { ...tile, content, classes, left, top } : tile);\r\n        } default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { createStore} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import * as types from \"./types\";\r\n\r\n/******************** MODALS ********************/\r\nexport const modalClosed = (id) => ({\r\n    type: types.MODAL_CLOSED,\r\n    payload: { id }\r\n});\r\n\r\nexport const modalOpened = (id) => ({\r\n    type: types.MODAL_OPENED,\r\n    payload: { id }\r\n});\r\n\r\n/******************** INPUTS ********************/\r\nexport const inputCreated = (id, value) => ({\r\n    type: types.INPUT_CREATED,\r\n    payload: { id, value }\r\n});\r\n\r\nexport const inputDeleted = (id) => ({\r\n    type: types.INPUT_DELETED,\r\n    payload: { id }\r\n});\r\n\r\nexport const inputUpdated = (id, value) => ({\r\n    type: types.INPUT_UPDATED,\r\n    payload: { id, value }\r\n});\r\n\r\n/******************** OBSERVERS ********************/\r\nexport const observerCreated = (id) => ({\r\n    type: types.OBSERVER_CREATED,\r\n    payload: { id }\r\n});\r\n\r\nexport const observerDeleted = (id) => ({\r\n    type: types.OBSERVER_DELETED,\r\n    payload: { id }\r\n});\r\n\r\nexport const observerUpdated = (id, viewState) => ({\r\n    type: types.OBSERVER_UPDATED,\r\n    payload: { id, viewState }\r\n});\r\n\r\n/******************** TILES ********************/\r\nexport const tileCreated = ({ id, content, classes, left, top }) => ({\r\n    type: types.TILE_CREATED,\r\n    payload: { id, content, classes, left, top }\r\n});\r\n\r\nexport const tileDeleted = (id) => ({\r\n    type: types.TILE_DELETED,\r\n    payload: { id }\r\n});\r\n\r\nexport const tilesDeleted = () => ({\r\n    type: types.TILES_DELETED,\r\n    payload: { }\r\n});\r\n\r\nexport const tileUpdated = ({ id, content, classes, left, top }) => ({\r\n    type: types.TILE_UPDATED,\r\n    payload: { id, content, classes, left, top }\r\n});","import React, { Children, cloneElement, isValidElement, useEffect, useRef, useState } from \"react\";\r\n\r\nconst BoundingRect = ({ children }) => {\r\n    const node = useRef(null);\r\n    const [boundingNode, setBounds] = useState(null);\r\n    useEffect(() => setBounds(node.current), []);\r\n\r\n    return (\r\n        <div ref={node} className=\"bounding-rect\">\r\n            {children && Children.map(children, (child, key) =>\r\n                isValidElement(child) ? cloneElement(child, { key, boundingNode }) : child\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoundingRect;\r\n","import React from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { Tile } from \"./\";\r\nimport { itemTypes, snapToGrid } from \"../draggable\";\r\n\r\nconst Container = ({ classes, boundingNode, hasSnapToGrid, isEraseMode }) => {\r\n    const dispatch = useDispatch();\r\n    const tiles = useSelector(state => state.tiles, shallowEqual);\r\n\r\n    const getClasses = ({ canDrop, isOver, isEraseMode } = {}) => {\r\n        let className = \"container\";\r\n        if (classes) className += ` ${classes}`;\r\n        if (isOver) className += ` ${canDrop ? \"is-over\" : \"no-drop\"}`;\r\n        if (isEraseMode) className += \" erase-mode\";\r\n        return className;\r\n    }\r\n\r\n    const [, drop] = useDrop({\r\n        accept: itemTypes.TILE,\r\n        drop: (item, monitor) => {\r\n            const tile = tiles.find(tile => tile.id === item.id);\r\n            const delta = monitor.getDifferenceFromInitialOffset();\r\n            const offset = monitor.getSourceClientOffset();\r\n            const bounds = boundingNode.getBoundingClientRect();\r\n\r\n\t\t\tlet left = tile ? (tile.left + delta.x) : (offset.x - bounds.left);\r\n            let top = tile ? (tile.top + delta.y) : (offset.y - bounds.top);\r\n            if (hasSnapToGrid) [left, top] = snapToGrid(left, top);\r\n\r\n\t\t\tdispatch(actions.tileUpdated({ ...item, left, top }));\r\n            return { left, top };\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div ref={drop} className={getClasses({ isEraseMode })}>\r\n            {tiles && tiles.map(tile => <Tile { ...tile } key={tile.id}\r\n                handleClick={() => isEraseMode && dispatch(actions.tileDeleted(tile.id))} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Container;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { itemTypes } from \"../draggable\";\r\n\r\nconst Tile = ({ id, content, classes, isSource, handleClick }) => {\r\n    const dispatch = useDispatch();\r\n    const { left, top } = useSelector(state => Object(state.tiles.find(tile => tile.id === id)));\r\n\r\n    const getClasses = () => {\r\n        let className = \"tile\";\r\n        if (classes) className += ` ${classes}`;\r\n        if (!isSource) className += \" draggable\";\r\n        if (isDragging) className += \" dragging\";\r\n        if (isSource) className += \" source\";\r\n        return className;\r\n    };\r\n\r\n    const getStyle = () => ({ transform: `translate(${left}px, ${top}px)` });\r\n\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: { type: itemTypes.TILE, id, content, classes, isSource },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                const itemProps = {\r\n                    id: isSource ? `${item.id}-${Math.trunc(Math.random() * 1000000)}` : item.id,\r\n                    content: item.content,\r\n                    classes: item.classes ?? null,\r\n                    left: dropResult.left,\r\n                    top: dropResult.top,\r\n                };\r\n                dispatch(isSource ? actions.tileCreated(itemProps) : actions.tileUpdated(itemProps));\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        })\r\n    });\r\n\r\n    useEffect(() => { preview(<img src=\"\" alt=\"\" />, { captureDraggingState: true }); });\r\n\r\n    return (\r\n        <div ref={drag} onClick={handleClick ?? null} className={getClasses()} style={getStyle()}>\r\n            {content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tile;","import React, { useState } from \"react\";\r\n\r\nconst Tabs = ({ children, classes, isColumnar }) => {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const activeChild = children ? children[activeTab].props : null;\r\n\r\n    return (\r\n        <div className={`${classes ?? \"\"}${isColumnar ? \" row\" : \" column\"}`}>\r\n            <div className={`tab-buttons${isColumnar ? \" column\" : \" row\"}`}>\r\n                {children && children.map(({ props: { index, label }}) =>\r\n                    <Tab key={index} index={index} label={label} switchTab={setActiveTab} activeTab={activeTab} />\r\n                )}\r\n            </div>\r\n            <div className={`tab-content${activeChild.className ? \" \" + activeChild.className : \"\"}`}>\r\n                {activeChild.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Tab = ({ index, label, switchTab, activeTab }) => (\r\n    <div onClick={() => switchTab(index)} className={`tab-button${activeTab === index ? \" active\" : \"\"}`}>\r\n        {label}\r\n    </div>\r\n);\r\n\r\nexport default Tabs;","import React from \"react\";\r\nimport { Tile } from \"./\";\r\nimport { Tabs } from \"../tabs\";\r\n\r\nconst CHAR_SETS = new Map([\r\n    [\"alphabet\", {\r\n        label: \"Alphabet & Common\",\r\n        left: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"],\r\n        right: [\"ch\", \"ck\", \"ph\", \"sh\", \"th\", \"wh\", \"tch\", \"dge\"],\r\n    }],\r\n    [\"advancedVowels\", {\r\n        label: \"Advanced Vowels\",\r\n        left: [\"ai\", \"au\", \"aw\", \"ay\", \"ea\", \"ee\", \"eigh\", \"ew\", \"ue\", \"ey\", \"ie\", \"igh\", \"oa\", \"oi\", \"oo\", \"ou\", \"ow\", \"oy\"],\r\n        right: [\"or\", \"ar\", \"er\", \"ur\", \"ir\", \"ear\", \"oar\", \"ore\", \"our\", \"oor\"],\r\n    }],\r\n    [\"consonants\", {\r\n        label: \"Consonants\",\r\n        left: [\"ff\", \"ll\", \"ss\", \"zz\", \"ge\", \"ce\", \"gh\", \"gn\", \"gu\", \"kn\", \"mb\", \"mn\", \"que\", \"se\", \"wr\"],\r\n    }],\r\n    [\"affixes\", {\r\n        label: \"Affixes\",\r\n        left: [\"de\", \"dis\", \"en\", \"in\", \"mis\", \"pre\", \"re\", \"sub\", \"un\"],\r\n        right: [\"al\", \"cial\", \"cian\", \"cious\", \"ed\", \"er\", \"es\", \"s\", \"est\", \"ful\", \"ing\", \"less\", \"ness\", \"ly\", \"ment\", \"sion\", \"tial\", \"tian\", \"tion\", \"ture\"],\r\n    }],\r\n    [\"chunks\", {\r\n        label: \"Chunks\",\r\n        left: [\"all\", \"am\", \"an\", \"ang\", \"ing\", \"ong\", \"ung\", \"ank\", \"ink\", \"onk\", \"unk\"],\r\n        right: [\"ble\", \"cle\", \"dle\", \"fle\", \"gle\", \"kle\", \"ple\", \"stl\", \"tle\", \"zle\"]\r\n    }]\r\n]);\r\n\r\nconst TileBar = () => {\r\n    const getTiles = (charSet, side = \"left\", typeCase = \"lower\") => {\r\n        let tiles = charSet[side];\r\n        if (typeCase === \"upper\") tiles = tiles.map(c => c.toUpperCase());\r\n\r\n        return tiles.map(e => <Tile key={e} id={e} content={e} isSource />);\r\n    };\r\n\r\n    return (\r\n        <Tabs classes=\"tilebar\">\r\n            {Array.from(CHAR_SETS.values(), (charSet, idx) => (\r\n                <label key={idx} index={idx} label={charSet.label} className=\"tile-container\">\r\n                    {charSet.left && <div className=\"tiles\">{getTiles(charSet, \"left\")}</div>}\r\n                    {charSet.right && <div className=\"tiles\">{getTiles(charSet, \"right\")}</div>}\r\n                </label>\r\n            ))}\r\n        </Tabs>\r\n    );\r\n};\r\n\r\nexport default TileBar;","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\nimport { itemTypes, snapToGrid } from \"./\";\r\nimport { Tile } from \"../tiles\";\r\n\r\nconst DragLayer = ({ hasSnapToGrid, boundingNode }) => {\r\n    const {\r\n        item,\r\n        itemType,\r\n        itemOffset,\r\n        initItemOffset,\r\n        deltaOffset,\r\n        isDragging,\r\n    } = useDragLayer(monitor => ({\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        itemOffset: monitor.getSourceClientOffset(),\r\n        initItemOffset: monitor.getInitialSourceClientOffset(),\r\n        deltaOffset: monitor.getDifferenceFromInitialOffset(),\r\n\t\tisDragging: monitor.isDragging(),\r\n    }));\r\n\r\n    const getStyle = () => {\r\n        if (!initItemOffset || !itemOffset) { return { display: \"none\" }; }\r\n\r\n        const bounds = boundingNode.getBoundingClientRect();\r\n        let left = item.isSource ? itemOffset.x : bounds.left + deltaOffset.x;\r\n        let top = item.isSource ? itemOffset.y : bounds.top + deltaOffset.y;\r\n        if (hasSnapToGrid) [left, top] = snapToGrid(left, top);\r\n\r\n        return { transform: `translate(${left}px, ${top}px)` };\r\n    };\r\n\r\n    if (!isDragging) { return null; }\r\n\r\n\treturn (\r\n\t\t<div className=\"drag-layer\">\r\n\t\t\t<div style={getStyle()}>\r\n                {itemType === itemTypes.TILE && <Tile {...item} />}\r\n            </div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DragLayer;","const itemTypes = {\r\n    TILE: \"TILE\",\r\n}\r\n\r\nexport default itemTypes;","const snapToGrid = (x, y, offset = 32) => [{ x }, { y }].map(axis => Math.round((Object.values(axis)[0] - offset) / offset) * offset + offset);\r\n\r\nexport default snapToGrid;","import React, { Children, cloneElement } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { AlertButton, Modal } from \"./\";\r\n\r\nconst Alert = ({ children, id, modalClasses, iconClasses, icon, heading, subheading }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const closeAlert = () => dispatch(actions.modalClosed(id));\r\n\r\n    return (\r\n        <Modal id={id} classes={modalClasses ?? null}>\r\n            <div className=\"alert\">\r\n                { icon && <img src={icon} className={`alert-icon ${iconClasses ?? \"\"}`} alt=\"\" /> }\r\n                <div className=\"alert-heading\">{heading}</div>\r\n                { subheading && <div className=\"alert-subheading\">{subheading}</div> }\r\n                <div className=\"row j-center\">\r\n                    <AlertButton text=\"Cancel\" classes=\"grey\" handleClose={closeAlert} />\r\n                    {children && Children.map(children, child => cloneElement(child, { handleClose: closeAlert }))}\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from \"react\";\r\n\r\nconst AlertButton = ({ text, classes, onClick, handleClose }) => {\r\n    const handleClick = () => {\r\n        if (onClick) onClick();\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div className={`alert-button ${classes ?? \"\"}`} onClick={handleClick}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlertButton;","import React, { Children } from \"react\";\r\n\r\nconst FloatingMenu = ({ children }) => {\r\n    const getClasses = (isActive, className) => {\r\n        let classes = \"circle-button\";\r\n        if (isActive === false) classes += \" inactive\";\r\n        if (className) classes += \" \" + className;\r\n        return classes;\r\n    }\r\n\r\n    return (\r\n        <div className=\"floating-menu\">\r\n            {children && Children.map(children, ({ props: { children, isActive, className, title, onClick }}, idx) => (\r\n                <div key={idx} title={title} onClick={onClick} className={getClasses(isActive, className)}>\r\n                    {children}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FloatingMenu;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { Portal } from \"./\";\r\n\r\nconst Modal = ({ children, classes, hasHeader, id }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const closeModal = (event) => {\r\n        event.stopPropagation();\r\n        dispatch(actions.modalClosed(id));\r\n    };\r\n\r\n    const handleClick = (event) => event.stopPropagation();\r\n\r\n    return (\r\n        <Portal>\r\n            <div onMouseDown={closeModal} onMouseUp={handleClick} onClick={handleClick} className=\"modal-container dark\">\r\n                <div onMouseDown={handleClick} onMouseUp={handleClick} onClick={handleClick} className={`modal-content ${classes ?? \"\"}`}>\r\n                    {hasHeader && (\r\n                        <div className=\"modal-header\">\r\n                            <span onClick={closeModal} className=\"close\">&times;</span>\r\n                        </div>\r\n                    )}\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </Portal>\r\n    );\r\n}\r\n\r\nexport default Modal;","import ReactDOM from \"react-dom\";\r\n\r\nconst portalRoot = document.getElementById(\"portal-root\");\r\nconst Portal = ({ children }) => ReactDOM.createPortal(children, portalRoot);\r\n\r\nexport default Portal;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport { BoundingRect, DragLayer } from \"./draggable\";\r\nimport { Container, TileBar } from \"./tiles\";\r\nimport { Alert, AlertButton, FloatingMenu } from \"./popovers\";\r\nimport * as Media from \"../media\";\r\nimport \"../css/index.scss\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isConfirmationOpen = useSelector(state => Object(state.modals.find(modal => modal.id === \"confirm-delete\")).isOpen);\r\n    const [isEraseMode, setIsEraseMode] = useState(false);\r\n    const [isSnapToGrid, setIsSnapToGrid] = useState(false);\r\n\r\n    return (\r\n        <DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\r\n            <div className=\"common\">\r\n                <TileBar />\r\n                <BoundingRect>\r\n                    <Container hasSnapToGrid={isSnapToGrid} isEraseMode={isEraseMode} />\r\n                    <DragLayer hasSnapToGrid={isSnapToGrid} />\r\n                    <FloatingMenu>\r\n                        <li title=\"Delete all tiles\" onClick={() => dispatch(actions.modalOpened(\"confirm-delete\"))}>\r\n                            <img src={Media.Trashcan} alt=\"Trashcan icon\" />\r\n                            { isConfirmationOpen ? (\r\n                                <Alert id=\"confirm-delete\" modalClasses=\"pad-ctn-2 border-red\" iconClasses=\"red-1-svg\" icon={Media.Trashcan} heading=\"Delete all tiles?\">\r\n                                    <AlertButton text=\"Delete\" classes=\"red\" onClick={() => dispatch(actions.tilesDeleted())} />\r\n                                </Alert>\r\n                            ) : null}\r\n                        </li>\r\n                        <li title={`${isEraseMode ? \"Disable\" : \"Enable\"} erase mode`} onClick={() => setIsEraseMode(!isEraseMode)} isActive={isEraseMode}>\r\n                            <img src={Media.Eraser} alt=\"Eraser icon\" />\r\n                        </li>\r\n                        <li title=\"Snap to grid\" onClick={() => setIsSnapToGrid(!isSnapToGrid)} isActive={isSnapToGrid}>\r\n                            <img src={Media.Grid} alt=\"Grid icon\" />\r\n                        </li>\r\n                    </FloatingMenu>\r\n                </BoundingRect>\r\n            </div>\r\n        </DndProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}